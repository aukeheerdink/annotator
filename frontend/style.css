:root {
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 400;

  color-scheme: light dark;
  color: var(--color-foreground);
  background-color: var(--color-background);
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

@font-face {
  font-family: 'Roboto';
  src: url('assets/RobotoFlex-VariableFont.ttf');
}

@font-face {
  font-family: 'Roboto Mono';
  src: url('assets/RobotoMono-VariableFont.ttf');
}

html {
  min-height: 100%;
}

body {
  padding: .5rem;
  min-height: 100vh;
  box-sizing: border-box;
  overflow-y: scroll;
  display: flex;
  flex-direction: column;
  justify-items: stretch;
}

.grow {
  flex-grow: 1;
  height: 2rem;
}

.print {
  align-self: baseline;
}

.row {
  display: flex;
  justify-content: center;
}

.header {
  display: flex;
  justify-content: space-between;
  padding: 0 1rem;
  --color-primary: var(--color-primary-s2);
  color: var(--color-halfway-fg);

  .theme div {
    display: inline-block
  }
}

#export-sequence {
  margin: 0;
  padding: 0;

  span {
    user-select: all;
  }
}

#details-formula {
  min-width: 10rem;
  display: inline-block;
}

button {
  cursor: pointer;
}

.s:not(.swap) {
  width: calc(var(--w) * 1.001ch);
  transform:
    scaleX(calc(var(--w) / var(--i)));
  display: inline-block;
  color: var(--color-halfway);
  transform-origin: center left;
}

.s.swap,
.s.swap {
  text-decoration: underline var(--color-halfway);
}

.alignment .alignment-body .template,
.alignment .alignment-body .numbering {
  grid-column: 1/ -1;
}

.alignment .alignment-wrapper {
  margin-left: 0;
}

.input-settings {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr 2fr;
  gap: .5rem 1rem;
}

@media (max-width: 1000px) {
  .input-settings {
    grid-template-columns: 1fr 2fr;
  }
}

.input-flex {
  display: flex;
  flex-direction: row;
  gap: .5rem;
  margin: 1rem 0;
  align-items: baseline;
  justify-content: space-evenly;
  flex-wrap: wrap;

  & .usi {
    background: var(--color-secondary);
    border-radius: 100000px;

    & a {
      color: var(--color-background);
      text-decoration: none;
      padding: 0 0 0 1rem;
    }

    & input {
      width: clamp(10ch, 50vw, 100ch);
      border-color: var(--color-secondary);

      &:hover {
        border-color: var(--color-green-light);
      }

      &:active {
        border-color: var(--color-foreground);
      }
    }

    & button {
      --_clr-main: var(--color-secondary);
      --_clr-hover: var(--color-green-light);
      border-radius: 0 1000000px 1000000px 0;
      margin: 0
    }
  }
}

:is(.input-settings, .input-flex) option {
  background: var(--color-background);
}

pre,
:is(.input-settings, .input-flex) textarea,
.peptide-input,
#export-sequence span {
  font-family: 'Roboto Mono', monospace;
  min-height: 2rem;
  resize: vertical;
  word-wrap: break-word;
  word-break: break-all;
  white-space: pre-wrap;
}

pre {
  min-height: 0;
  padding: 0 1rem;
  overflow: hidden;
}

.context:has(.error) {
  border-color: var(--color-red);
}

.context .error {
  text-decoration: underline;
  text-decoration-style: wavy;
  text-decoration-color: var(--color-red);
  color: var(--color-red);
}

.input-settings .wide {
  grid-column: 1/-1;
}

.input-settings h2 {
  grid-column: 1 /-1;
}

.input-settings .col-2 {
  grid-column: 2;
}

:is(.input-settings, .input-flex) .combined-input {
  display: flex;
}

:is(.input-settings, .input-flex) .combined-input span {
  margin-left: .5rem;
}

output.error,
output.warning {
  margin: .5rem;
  padding-left: .5rem;
  border: 2px solid var(--color-red);
  color: var(--color-foreground);

  &.warning {
    border-color: var(--color-yellow);
  }

  &:not(.hidden) {
    display: block;
  }

  & .raw {
    white-space: pre;
    font-family: monospace;
  }

  &.error .title {
    color: var(--color-red);
  }

  &.warning .title {
    color: var(--color-yellow);
  }

  & .context {
    display: flex;
    flex-direction: row;
    gap: 1rem;
    overflow: auto;

    & .line-number {
      color: var(--color-halfway-fg);
    }

    & pre {
      padding: 0;
      margin: 0;
      resize: none;
      white-space: pre;
      word-wrap: normal;
      word-break: keep-all;
      overflow: visible;
    }
  }
}

.selected-neutral-loss {
  padding-left: .5em;
}

dialog.neutral-loss {
  min-width: 525px;

  button {
    margin-top: 1rem;
  }
}

.hidden {
  display: none;
}

.center {
  align-self: center;
}

.input-settings:has(option[value="custom"]:checked) .custom-model {
  display: grid;
}

.custom-model {
  grid-column: 1 / -1;
  display: none;
  grid-template-columns: repeat(4, auto);
  gap: inherit;
  align-items: baseline;
  border: 2px solid var(--color-halfway);

  & .col-2 {
    grid-column: span 2;
  }

  & .grid-row {
    display: grid;
    grid-template-columns: subgrid;
    grid-column: 1 / -1;
  }

  & .charge-range {
    display: flex;

    span {
      margin: 2px;
    }

    input {
      border-left: none;
      width: 3rem;
    }
  }
}

.select-input,
.grouped-input {
  display: flex;
}

.select-input *,
.grouped-input * {
  flex-grow: 1;
  width: 1px;
}

.grouped-input *:where(input, select):not(:first-child) {
  border-left: none;
}

.select-input input {
  display: none;
  border-left: none;
}

.select-input:has(select.arg-1) input:nth-of-type(1),
.select-input:has(select.arg-2) input:nth-of-type(1),
.select-input:has(select.arg-2) input:nth-of-type(2) {
  display: block;
}


/* error-graph */
.spectrum .canvas-wrapper {
  height: calc(2 * var(--height));
  grid-template-rows: 1fr 2em 1fr;
  grid-template-areas:
    "y-axis canvas"
    ". x-axis"
    "sg-y-axis error-graph";
}

.spectrum .error-graph {
  --graph-height: 500px;
  --graph-height-inc: calc(var(--graph-height) + 10px);
  --radius: 50%;
  display: flex;
  flex-basis: 100%;
  grid-area: error-graph;
  position: relative;
  overflow: hidden;
  border-bottom: none;

  &>label {
    border: 2px solid var(--color-halfway);
    padding: .25rem;
    user-select: none;
    border-radius: 5px;
  }
}


.error-graph label:has(+input:checked),
.error-graph label:has(input:checked) {
  border-color: var(--color-primary);
}

.error-graph-y-axis {
  grid-area: sg-y-axis;
  display: flex;
  flex-direction: column;
  height: var(--graph-height-inc);
  justify-content: space-between;
  align-items: flex-end;
  padding-right: 2px;
  position: relative;
  overflow: hidden;
}

.error-graph-y-axis::after {
  content: "";
  display: block;
  position: absolute;
  height: 2px;
  width: calc(100vw - 200% - 55px);
  left: 100%;
  background-color: var(--color-foreground);
  top: var(--graph-height-inc);
  z-index: 0;
}

.error-graph-y-axis .title {
  writing-mode: vertical-rl;
  align-self: center;
  transform: rotate(180deg);
  font-style: italic;
  color: var(--color-halfway);
}

.error-graph :is(.y-axis, .x-axis) :is(.max, .min) {
  font-size: 10px;
}

.error-graph-y-axis::after,
.error-graph .x-axis::after {
  display: none;
}

.error-graph-y-axis #error-graph-density {
  width: 2rem;
  height: 100%;
  position: absolute;

  svg {
    width: 100%;
    height: 100%;
    --axis-range: calc(var(--y-max) - var(--y-min));
    --visible-range: calc(max(var(--max), var(--y-max)) - min(var(--min), var(--y-min)));
    --y-offset: calc(var(--y-max) - var(--max));
    transform: translateX(2px) translateY(calc(var(--y-offset) / var(--axis-range) * var(--height))) scaleY(calc(var(--visible-range) / var(--axis-range)));
    transform-origin: top center;

    & .line {
      stroke: var(--color-primary);
      stroke-width: var(--stroke-spectrum);
      fill: transparent;
    }

    & .volume {
      fill: var(--color-primary-o);
    }
  }
}

.error-graph .x-axis {
  position: absolute;
  width: 100%;
  border-top: 2px solid var(--color-foreground);
  top: clamp(0px, calc(var(--y-max) / (var(--y-max) - var(--y-min)) * 100% - 1px), 100%);
  pointer-events: none;
  transform: translateY(2px);
}

.error-graph .x-axis.hug-bottom {
  top: unset !important;
  bottom: 0px !important;
  border-top: none;
  border-bottom: 2px solid var(--color-foreground);
}

.error-graph .point.unassigned {
  z-index: 1;
}

.error-graph .point {
  width: 5px;
  height: 5px;
  background-color: var(--color);
  border-radius: var(--radius);
  position: absolute;
  --y: 0;
  top: calc(100% * (var(--y-max) - var(--y)) / (var(--y-max) - var(--y-min)));
  left: calc(100% * (1 - (var(--max-mz) - var(--mz)) / (var(--max-mz) - var(--min-mz))));
  display: block;
  z-index: 2;

  &.hidden {
    display: none;
  }
}

.error-graph .ruler {
  border-top: 2px dashed var(--color-foreground);
  width: 100%;
  height: 0;
  left: 0;
  right: 0;
  display: none;
  opacity: 0.5;
  position: absolute;
  pointer-events: none;
}

.error-graph:hover .ruler {
  display: block;
}

.spectrum.error-graph-relative .abs,
.spectrum.error-graph-absolute .rel {
  display: none;
}

.spectrum.error-graph-intensity .point {
  --s: calc(sqrt(var(--intensity)) / sqrt(var(--max-intensity)) * 6px + 2px);
  width: var(--s);
  height: var(--s);
}

.spectrum .error-graph.highlight .point {
  opacity: 0.2;
}

.spectrum .error-graph.highlight .point.highlight {
  opacity: 1;
}

.error-graph-y-axis .density.rel {
  --scale: calc((var(--rel-max-initial) - var(--rel-min-initial)) / (var(--y-max) - var(--y-min)));
  --translate: calc((var(--y-max) - var(--rel-max-initial)) / (var(--rel-max-initial) - var(--rel-min-initial)) * var(--height));
}

.error-graph-y-axis .density.abs {
  --scale: calc((var(--abs-max-initial) - var(--abs-min-initial)) / (var(--y-max) - var(--y-min)));
  --translate: calc((var(--y-max) - var(--abs-max-initial)) / (var(--abs-max-initial) - var(--abs-min-initial)) * var(--height));
}

.error-graph-y-axis .density {
  transform:
    scale(1, var(--scale)) translate(0, var(--translate));
}

/* Loading animation */

#annotate-button {
  height: 2rem;
}

.orbitrap {
  stroke-width: 0.3px;
  fill: none;
  height: 1rem;
  visibility: hidden;

  & .base {
    stroke: var(--color-foreground);
  }

  & .trace {
    stroke-width: 0.5px;
    stroke: var(--color-red);
    stroke-dasharray: 1 6;
    stroke-dashoffset: 0;
    transform: translateX(-1px);
    animation: move-dash 2s infinite linear;
  }
}

.loading+.orbitrap {
  visibility: visible;
  height: 5rem;
}

@keyframes move-dash {
  0% {
    stroke-dashoffset: 0;
    transform: translateX(-1px);
  }

  50% {
    transform: translateX(+1px);
  }

  100% {
    stroke-dashoffset: 100%;
    transform: translateX(-1px);
  }
}

.loading {
  pointer-events: none;
  border-color: var(--color-halfway);
  background-color: var(--color-halfway);
}

.loading:not(:has(+.orbitrap))::after {
  content: "⌬";
  display: inline-block;
  animation: rotate 2s infinite linear;
  margin-left: 1rem;
  font-size: 0.9rem;
  vertical-align: middle;
  color: var(--color-foreground);
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

/* resize wrapper */
.resize-wrapper {
  width: calc(100% + 1rem);
  margin: 0 -0.5rem;
  border-top: 2px solid var(--color-halfway);
  resize: vertical;
  min-height: 100px;
  display: flex;
  flex-direction: row;
  overflow: hidden;
  padding-bottom: 2px;
  background-color: var(--color-halfway);
}

.resize-wrapper>.resize {
  width: 2px;
  min-width: 2px;
  max-width: 2px;
  flex: 0 0 2px;
  padding: 0;
  margin: 0;
  background-color: var(--color-halfway);
  border-left: 2px solid var(--color-background);
  cursor: col-resize;
  overflow: hidden;
}

.resize-wrapper.active {
  cursor: col-resize;
}

.resize-wrapper.active>.resize {
  background-color: var(--color-primary);
}

.resize-wrapper.active * {
  pointer-events: none;
  user-select: none;
}

.resize-wrapper>div {
  padding: .5rem;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  min-width: 10%;
  overflow: hidden;
  overflow-y: scroll;
  background-color: var(--color-background);
}

.resize-wrapper>div:first-child {
  width: 50%;
}

.resize-wrapper>div:last-child {
  flex: 1;
}

.resize-wrapper>div table {
  width: 100%;
  max-width: 100%;
  table-layout: auto;
  word-break: break-all;
}

/* file drop hover */

html:not(.file-drop-hover) .cancel-drop {
  display: none;
}

.cancel-drop {
  position: sticky;
  top: 1rem;
  right: 1rem;
  width: fit-content;
}

html.file-drop-hover::before {
  content: "Drop here";
  display: flex;
  vertical-align: middle;
  justify-content: center;
  align-items: center;
  font-size: 3em;
  color: var(--color-background);
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
}

/* Search */

.match {
  color: var(--color-primary);
}

/* Formula details */

.isotopes-distribution {
  display: flex;
  height: 100px;
  border-bottom: 2px solid var(--color-halfway);
  align-items: end;

  & span {
    border-left: 2px solid var(--color-primary);
    height: calc(var(--intensity) * 100%);
    top: calc((1 - var(--intensity)) * 100%);
    flex-shrink: 1;
    flex-basis: 1rem;
  }

  & .mono {
    border-color: var(--color-red);
  }

  & .most-abundant {
    border-color: var(--color-green);
  }

  & .mono.most-abundant {
    border-left: 1px solid var(--color-red);
    border-right: 1px solid var(--color-green);
    margin-right: 1rem;
    flex-basis: 0;
  }
}

/* Footer */

footer {
  background-color: var(--color-halfway-bg);
  display: flex;
  margin: -.5rem;
  padding: 1rem;
  gap: 2rem;
  justify-content: center;

  &>* {
    display: block;
    color: var(--color-halfway-fg);
    padding: 0;
    margin: 0;
  }
}

/* General stats */
.general-stats td {
  padding: 0 .25rem;
  vertical-align: top;

  &:has(table) {
    padding: 0;
  }

  & table {
    width: -webkit-fill-available;

    & td:first-child {
      border-left: none;
    }

    & td:last-child {
      border-right: none;
    }

    & tr:first-child td {
      border-top: none;
    }

    & tr:last-child td {
      border-bottom: none;
    }
  }
}

label:has(#general-stats-show-details:not(:checked))+.general-stats .fragments-detail {
  display: none;
}

.separated-input {
  & output.error {
    display: none
  }

  &.error:focus-within output.error {
    display: block;
  }

  &>.values {
    display: flex;
    flex-wrap: wrap;
    border-radius: 0;
    padding: .2rem;
    cursor: pointer;
    border: 2px solid var(--color-halfway);
    background: var(--color-background);
    font-size: 1rem;

    &:hover {
      border-color: var(--color-halfway-fg);
    }

    &:focus-visible,
    &:focus-within {
      border-color: var(--color-foreground);
      outline: none;
    }

    &:active {
      border-color: var(--color-primary);
    }

    & .input {
      border: none;
      flex-grow: 1;
    }

    &>.element {
      list-style: none;
      border: 2px solid var(--color-halfway);
      padding: 2px;
      margin: 0;

      &:hover {
        border-color: var(--color-halfway-fg);
      }

      &:active {
        border-color: var(--color-primary);
      }

      &:focus-visible {
        border-color: var(--color-foreground);
        outline: none;
      }

      &:not(:first-child) {
        margin-left: 2px;
      }

      & sub {
        margin-bottom: -4px;
        display: inline-block;
      }

      & sup {
        margin-top: -4px;
        display: inline-block;
      }

      & .formula {
        border: none;
      }

      &>*:not(.delete) {
        pointer-events: none;
      }

      &>.delete {
        background: transparent;
        color: var(--color-halfway);
        border: none;
        border-radius: 0;
        padding: 0;
        margin: 0;
        padding-left: .5rem;
        padding-right: 2px;
        cursor: pointer;

        &:hover {
          color: var(--color-halfway-fg);
        }

        &:active {
          color: var(--color-red);
        }

        &:focus-visible {
          color: var(--color-foreground);
          outline: none;
        }
      }
    }

    & .clear {
      display: none;
    }

    & *+*+.clear {
      display: block;
    }
  }
}

#custom-mod-dialog {
  & .basic {
    display: grid;
    gap: 1rem;
    grid-template-columns: 2fr 1fr 2fr;
    align-items: baseline;

    p {
      margin: 0;
    }

    label,
    &>span {
      display: flex;
      gap: .5rem;
      align-items: baseline;
      justify-self: normal;

      input {
        flex-grow: 1;
      }
    }

    #custom-mod-formula {
      flex-grow: 1;

      & .formula {
        border: none;

        & sub {
          margin-bottom: -4px;
          display: inline-block;
        }

        & sup {
          margin-top: -4px;
          display: inline-block;
        }
      }
    }

    & output.error {
      grid-column: 1 / -1;
      justify-self: normal;
      margin: 0;
    }

    &:not(.error) output.error {
      display: none;
    }
  }

  & .row {
    justify-content: start;
    align-items: baseline;
    gap: .5rem;
    margin-top: .5rem;
  }

  &:not(:has(#custom-mod-type-single:checked)) .single,
  &:not(:has(#custom-mod-type-linker:checked)) .linker,
  &:not(:has(#custom-mod-linker-asymmetric:checked)) .asymmetric {
    display: none;
  }
}

.list-input {
  &>.modal {
    border: 2px solid var(--color-foreground);
    padding: .5rem;
  }

  &:not(.creating) .modal {
    display: none;
  }

  &.creating .create {
    pointer-events: none;
    --_clr-main: var(--color-halfway);
    cursor: not-allowed;
    display: none;
  }

  &>.values {
    display: flex;
    flex-direction: column;
    padding: 0;
    margin: .5rem;
    gap: .5rem;

    &>.element {
      list-style: none;
      border: 2px solid var(--color-halfway);
      padding: 2px;
      margin: 0;
      width: fit-content;
      cursor: default;

      &:hover {
        border-color: var(--color-halfway-fg);
      }

      &:active {
        border-color: var(--color-primary);
      }

      &:focus-visible {
        border-color: var(--color-foreground);
        outline: none;
      }

      &>span {
        cursor: pointer;

        &>* {
          pointer-events: none;
        }
      }


      &>.delete {
        background: transparent;
        color: var(--color-halfway);
        border: none;
        border-radius: 0;
        padding: 0;
        margin: 0;
        padding-left: .5rem;
        padding-right: 2px;
        cursor: pointer;

        &:hover {
          color: var(--color-halfway-fg);
        }

        &:active {
          color: var(--color-red);
        }

        &:focus-visible {
          color: var(--color-foreground);
          outline: none;
        }
      }
    }
  }
}

#custom-mods {
  padding: 0;
  margin: 0;

  &>li {
    display: block;
    margin-top: .5rem;
    margin-left: 2rem;
    position: relative;

    &::before {
      position: absolute;
      display: block;
      content: attr(data-id);
      width: 2rem;
      left: -2rem;
    }
  }

  .delete {
    margin-left: .5rem;
  }
}

.modification {
  p {
    margin: 0;
    padding-bottom: .5rem;
  }

  .cross-ids,
  .synonyms {
    display: flex;
    flex-wrap: wrap;
    align-items: baseline;
    gap: .5rem;
    padding: 0;
    margin: 0;
    padding-bottom: .5rem;

    &>li {
      display: block;
    }

    &>li:not(.title) {
      border: 2px solid var(--color-halfway-bg);
      border-radius: 6px;
      padding: 2px;
    }
  }

  .formula {
    color: var(--color-green);
  }
}

/* Raw files */

.rawfile {
  .header {
    display: flex;
    align-items: baseline;
    gap: 2rem;
    margin: .5rem 0;

    .spectrum-selection {
      display: flex;
      align-items: baseline;
      gap: 1rem;
      margin-left: auto;

      .combined-input {
        display: flex;
        align-items: baseline;
        gap: .5rem;
      }
    }
  }

  ul {
    padding: 0 0 0 .5rem;
  }

  li {
    word-break: break-all;
    display: block;
    margin-top: .5rem;
    margin-left: 4rem;
    position: relative;

    &::before {
      content: attr(data-index);
      display: inline-block;
      width: 4rem;
      margin-left: -4rem;
      vertical-align: baseline;
    }

    button {
      margin-right: .5rem;
    }

    span {
      padding: .5rem 0;
    }

    .tooltip {
      display: none;
    }

    &:has(span:hover) .tooltip,
    &:has(span:focus-visible) .tooltip,
    .tooltip:hover {
      display: block;
      position: absolute;
      background-color: var(--color-background);
      border: 2px solid var(--color-primary);
      padding: .5rem;
      z-index: 1;
    }
  }
}

.hint {
  color: var(--color-halfway-fg);
  padding-left: 1rem;
  font-style: italic;
}

#identified-peptide-details {
  table {
    table-layout: fixed;
  }
}